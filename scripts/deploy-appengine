#!/bin/bash

set -euo pipefail

DIR=$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )

# This assumes the built-in CircleCI environment variables:
# https://circleci.com/docs/2.0/env-vars/#built-in-environment-variables

BASE_URL="https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"

VERSION="$("$DIR/version")"
ENVIRONMENT="$("$DIR/environment")"

# Global variables for state management.
DEPLOY_ID=''

PARAM='--no-promote'
TRANSIENT='true'
PRODUCTION='false'
if [ "$ENVIRONMENT" = "production" ]; then
  PARAM='--promote'
  TRANSIENT='false'
  PRODUCTION='true'
fi

# Helper to create the Deployment object:
# https://docs.github.com/en/rest/reference/repos#create-a-deployment
create_deployment() {
  local PAYLOAD
  PAYLOAD="$(jq -n \
    --arg ref "$CIRCLE_SHA1" \
    --arg environment "$ENVIRONMENT" \
    --arg description "$1" \
    --argjson transient_environment "$TRANSIENT" \
    --argjson production_environment "$PRODUCTION" \
    '{
      ref: $ref,
      auto_merge: false,
      required_contexts: ["ci/circleci: build"],
      environment: $environment,
      description: $description,
      transient_environment: $transient_environment,
      production_environment: $production_environment
    }' )"
  echo "Creating Deployment: $PAYLOAD"
  local RESP
  RESP="$(curl -f \
    -u "$CIRCLE_PROJECT_USERNAME:$GITHUB_TOKEN" \
    -X POST \
    -H "Accept: application/vnd.github.v3+json" \
    "$BASE_URL/deployments" \
    -d "$PAYLOAD")"
  echo "$RESP"
  DEPLOY_ID="$(echo "$RESP" | jq -r '.id')"
}

# Helper to create the "Deployment Status" object
# https://docs.github.com/en/rest/reference/repos#create-a-deployment-status
update_status() {
  local PAYLOAD
  PAYLOAD="$(jq -n \
    --arg state "$1" \
    --arg log_url "$CIRCLE_BUILD_URL" \
    --arg description "$2" \
    --arg environment "$ENVIRONMENT" \
    --arg environment_url "$3" \
    '{
      state: $state,
      log_url: $log_url,
      description: $description,
      environment: $environment,
      environment_url: $environment_url
    }' )"
  echo "Setting Deployment Status: $PAYLOAD"
  curl -f \
    -u "$CIRCLE_PROJECT_USERNAME:$GITHUB_TOKEN" \
    -X POST \
    -H "Accept: application/vnd.github.v3+json" \
    "$BASE_URL/deployments/$DEPLOY_ID/statuses" \
    -d "$PAYLOAD"
}

# Update GitHub status to mark a pending deployment.
create_deployment \
  "Google App Engine deployment" \

# Update GitHub status to mark an in-progress deployment.
update_status \
  "in_progress" \
  "Deploying to Google App Engine..." \
  ""

# Deploy to Google App Engine
set -x
gcloud app deploy app/app.yaml \
    --quiet \
    $PARAM \
    --version "$VERSION"
set +x

# Retrieve the latest version URL from the deployment.
VERSION_URL="$(gcloud app versions describe "$VERSION" \
    --service default \
    --format 'value(versionUrl)')"

# Update GitHub status to mark a successful deployment.
update_status \
  "success" \
  "Deployed to Google App Engine!" \
  "$VERSION_URL"
